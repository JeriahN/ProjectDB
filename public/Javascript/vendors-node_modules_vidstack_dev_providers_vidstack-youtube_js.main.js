/*! For license information please see vendors-node_modules_vidstack_dev_providers_vidstack-youtube_js.main.js.LICENSE.txt */
"use strict";(self.webpackChunkProjectDB=self.webpackChunkProjectDB||[]).push([["vendors-node_modules_vidstack_dev_providers_vidstack-youtube_js"],{"./node_modules/vidstack/dev/chunks/vidstack-DscYSLiW.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findYouTubePoster: () => (/* binding */ findYouTubePoster),\n/* harmony export */   resolveYouTubeVideoId: () => (/* binding */ resolveYouTubeVideoId)\n/* harmony export */ });\nconst videoIdRE = /(?:youtu\\.be|youtube|youtube\\.com|youtube-nocookie\\.com)\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|)((?:\\w|-){11})/;\nconst posterCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveYouTubeVideoId(src) {\n  return src.match(videoIdRE)?.[1];\n}\nasync function findYouTubePoster(videoId, abort) {\n  if (posterCache.has(videoId))\n    return posterCache.get(videoId);\n  if (pendingFetch.has(videoId))\n    return pendingFetch.get(videoId);\n  const pending = new Promise(async (resolve) => {\n    const sizes = ["maxresdefault", "sddefault", "hqdefault"];\n    for (const size of sizes) {\n      for (const webp of [true, false]) {\n        const url = resolveYouTubePosterURL(videoId, size, webp), response = await fetch(url, {\n          mode: "no-cors",\n          signal: abort.signal\n        });\n        if (response.status < 400) {\n          posterCache.set(videoId, url);\n          resolve(url);\n          return;\n        }\n      }\n    }\n  }).catch(() => "").finally(() => pendingFetch.delete(videoId));\n  pendingFetch.set(videoId, pending);\n  return pending;\n}\nfunction resolveYouTubePosterURL(videoId, size, webp) {\n  const type = webp ? "webp" : "jpg";\n  return `https://i.ytimg.com/${webp ? "vi_webp" : "vi"}/${videoId}/${size}.${type}`;\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/chunks/vidstack-DscYSLiW.js?')},"./node_modules/vidstack/dev/chunks/vidstack-U-OfZdzz.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ EmbedProvider),\n/* harmony export */   t: () => (/* binding */ timedPromise)\n/* harmony export */ });\n/* harmony import */ var _vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vidstack-mrj_B2Yo.js */ "./node_modules/vidstack/dev/chunks/vidstack-mrj_B2Yo.js");\n/* harmony import */ var _vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vidstack-Chu5mi6j.js */ "./node_modules/vidstack/dev/chunks/vidstack-Chu5mi6j.js");\n\n\n\nfunction timedPromise(callback, ms = 3e3) {\n  const promise = (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.n)();\n  setTimeout(() => {\n    const rejection = callback();\n    if (rejection)\n      promise.reject(rejection);\n  }, ms);\n  return promise;\n}\n\nclass EmbedProvider {\n  constructor(_iframe) {\n    this._iframe = _iframe;\n    this._src = (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.f)("");\n    /**\n     * Defines which referrer is sent when fetching the resource.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy}\n     */\n    this.referrerPolicy = null;\n    _iframe.setAttribute("frameBorder", "0");\n    _iframe.setAttribute("aria-hidden", "true");\n    _iframe.setAttribute(\n      "allow",\n      "autoplay; fullscreen; encrypted-media; picture-in-picture; accelerometer; gyroscope"\n    );\n    if (this.referrerPolicy !== null) {\n      _iframe.setAttribute("referrerpolicy", this.referrerPolicy);\n    }\n  }\n  get iframe() {\n    return this._iframe;\n  }\n  setup() {\n    (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(window, "message", this._onWindowMessage.bind(this));\n    (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._iframe, "load", this._onLoad.bind(this));\n    (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.g)(this._watchSrc.bind(this));\n  }\n  _watchSrc() {\n    const src = this._src();\n    if (!src.length) {\n      this._iframe.setAttribute("src", "");\n      return;\n    }\n    const params = (0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.p)(() => this._buildParams());\n    this._iframe.setAttribute("src", (0,_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_1__.a)(src, params));\n  }\n  _postMessage(message, target) {\n    this._iframe.contentWindow?.postMessage(JSON.stringify(message), target ?? "*");\n  }\n  _onWindowMessage(event) {\n    const origin = this._getOrigin(), isOriginMatch = (event.source === null || event.source === this._iframe?.contentWindow) && (!(0,_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(origin) || origin === event.origin);\n    if (!isOriginMatch)\n      return;\n    try {\n      const message = JSON.parse(event.data);\n      if (message)\n        this._onMessage(message, event);\n      return;\n    } catch (e) {\n    }\n    if (event.data)\n      this._onMessage(event.data, event);\n  }\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/chunks/vidstack-U-OfZdzz.js?')},"./node_modules/vidstack/dev/providers/vidstack-youtube.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YouTubeProvider: () => (/* binding */ YouTubeProvider)\n/* harmony export */ });\n/* harmony import */ var _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunks/vidstack-mrj_B2Yo.js */ "./node_modules/vidstack/dev/chunks/vidstack-mrj_B2Yo.js");\n/* harmony import */ var _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunks/vidstack-Bdqy3iGv.js */ "./node_modules/vidstack/dev/chunks/vidstack-Bdqy3iGv.js");\n/* harmony import */ var _chunks_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chunks/vidstack-Chu5mi6j.js */ "./node_modules/vidstack/dev/chunks/vidstack-Chu5mi6j.js");\n/* harmony import */ var _chunks_vidstack_U_OfZdzz_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunks/vidstack-U-OfZdzz.js */ "./node_modules/vidstack/dev/chunks/vidstack-U-OfZdzz.js");\n/* harmony import */ var _chunks_vidstack_DscYSLiW_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunks/vidstack-DscYSLiW.js */ "./node_modules/vidstack/dev/chunks/vidstack-DscYSLiW.js");\n\n\n\n\n\n\n\n\n\n\nconst YouTubePlayerState = {\n  _Unstarted: -1,\n  _Ended: 0,\n  _Playing: 1,\n  _Paused: 2,\n  _Buffering: 3,\n  _Cued: 5\n};\n\nclass YouTubeProvider extends _chunks_vidstack_U_OfZdzz_js__WEBPACK_IMPORTED_MODULE_0__.E {\n  constructor(iframe, _ctx) {\n    super(iframe);\n    this._ctx = _ctx;\n    this.$$PROVIDER_TYPE = "YOUTUBE";\n    this.scope = (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.r)();\n    this._videoId = (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.f)("");\n    this._state = -1;\n    this._seekingTimer = -1;\n    this._pausedSeeking = false;\n    this._played = 0;\n    this._playedRange = new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(0, 0);\n    this._currentSrc = null;\n    this._playPromise = null;\n    this._pausePromise = null;\n    /**\n     * Sets the player\'s interface language. The parameter value is an ISO 639-1 two-letter\n     * language code or a fully specified locale. For example, fr and fr-ca are both valid values.\n     * Other language input codes, such as IETF language tags (BCP 47) might also be handled properly.\n     *\n     * The interface language is used for tooltips in the player and also affects the default caption\n     * track. Note that YouTube might select a different caption track language for a particular\n     * user based on the user\'s individual language preferences and the availability of caption tracks.\n     *\n     * @defaultValue \'en\'\n     */\n    this.language = "en";\n    this.color = "red";\n    /**\n     * Whether cookies should be enabled on the embed. This is turned off by default to be\n     * GDPR-compliant.\n     *\n     * @defaultValue `false`\n     */\n    this.cookies = false;\n  }\n  get _notify() {\n    return this._ctx.delegate._notify;\n  }\n  get currentSrc() {\n    return this._currentSrc;\n  }\n  get type() {\n    return "youtube";\n  }\n  get videoId() {\n    return this._videoId();\n  }\n  preconnect() {\n    (0,_chunks_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_3__.p)(this._getOrigin());\n  }\n  setup() {\n    super.setup();\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.g)(this._watchVideoId.bind(this));\n    this._notify("provider-setup", this);\n  }\n  async play() {\n    const { paused } = this._ctx.$state;\n    if (!this._playPromise) {\n      this._playPromise = (0,_chunks_vidstack_U_OfZdzz_js__WEBPACK_IMPORTED_MODULE_0__.t)(() => {\n        this._playPromise = null;\n        if (paused())\n          return "Timed out.";\n      });\n      this._remote("playVideo");\n    }\n    return this._playPromise.promise;\n  }\n  async pause() {\n    const { paused } = this._ctx.$state;\n    if (!this._pausePromise) {\n      this._pausePromise = (0,_chunks_vidstack_U_OfZdzz_js__WEBPACK_IMPORTED_MODULE_0__.t)(() => {\n        this._pausePromise = null;\n        if (!paused())\n          ;\n      });\n      this._remote("pauseVideo");\n    }\n    return this._pausePromise.promise;\n  }\n  setMuted(muted) {\n    if (muted)\n      this._remote("mute");\n    else\n      this._remote("unMute");\n  }\n  setCurrentTime(time) {\n    this._pausedSeeking = this._ctx.$state.paused();\n    this._remote("seekTo", time);\n    this._notify("seeking", time);\n  }\n  setVolume(volume) {\n    this._remote("setVolume", volume * 100);\n  }\n  setPlaybackRate(rate) {\n    this._remote("setPlaybackRate", rate);\n  }\n  async loadSource(src) {\n    if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.i)(src.src)) {\n      this._currentSrc = null;\n      this._videoId.set("");\n      return;\n    }\n    const videoId = (0,_chunks_vidstack_DscYSLiW_js__WEBPACK_IMPORTED_MODULE_4__.resolveYouTubeVideoId)(src.src);\n    this._videoId.set(videoId ?? "");\n    this._currentSrc = src;\n  }\n  _getOrigin() {\n    return !this.cookies ? "https://www.youtube-nocookie.com" : "https://www.youtube.com";\n  }\n  _watchVideoId() {\n    this._reset();\n    const videoId = this._videoId();\n    if (!videoId) {\n      this._src.set("");\n      return;\n    }\n    this._src.set(`${this._getOrigin()}/embed/${videoId}`);\n    this._notify("load-start");\n  }\n  _buildParams() {\n    const { keyDisabled } = this._ctx.$props, { muted, playsInline, nativeControls } = this._ctx.$state, showControls = nativeControls();\n    return {\n      autoplay: 0,\n      cc_lang_pref: this.language,\n      cc_load_policy: showControls ? 1 : void 0,\n      color: this.color,\n      controls: showControls ? 1 : 0,\n      disablekb: !showControls || keyDisabled() ? 1 : 0,\n      enablejsapi: 1,\n      fs: 1,\n      hl: this.language,\n      iv_load_policy: showControls ? 1 : 3,\n      mute: muted() ? 1 : 0,\n      playsinline: playsInline() ? 1 : 0\n    };\n  }\n  _remote(command, arg) {\n    this._postMessage({\n      event: "command",\n      func: command,\n      args: arg ? [arg] : void 0\n    });\n  }\n  _onLoad() {\n    window.setTimeout(() => this._postMessage({ event: "listening" }), 100);\n  }\n  _onReady(trigger) {\n    this._notify("loaded-metadata");\n    this._notify("loaded-data");\n    this._ctx.delegate._ready(void 0, trigger);\n  }\n  _onPause(trigger) {\n    this._pausePromise?.resolve();\n    this._pausePromise = null;\n    this._notify("pause", void 0, trigger);\n  }\n  _onTimeUpdate(time, trigger) {\n    const { duration, realCurrentTime } = this._ctx.$state, hasEnded = this._state === YouTubePlayerState._Ended, boundTime = hasEnded ? duration() : time, detail = {\n      currentTime: boundTime,\n      played: this._getPlayedRange(boundTime)\n    };\n    this._notify("time-update", detail, trigger);\n    if (!hasEnded && Math.abs(boundTime - realCurrentTime()) > 1) {\n      this._notify("seeking", boundTime, trigger);\n    }\n  }\n  _getPlayedRange(time) {\n    return this._played >= time ? this._playedRange : this._playedRange = new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(0, this._played = time);\n  }\n  _onProgress(buffered, seekable, trigger) {\n    const detail = {\n      buffered: new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(0, buffered),\n      seekable\n    };\n    this._notify("progress", detail, trigger);\n    const { seeking, realCurrentTime } = this._ctx.$state;\n    if (seeking() && buffered > realCurrentTime()) {\n      this._onSeeked(trigger);\n    }\n  }\n  _onSeeked(trigger) {\n    const { paused, realCurrentTime } = this._ctx.$state;\n    window.clearTimeout(this._seekingTimer);\n    this._seekingTimer = window.setTimeout(\n      () => {\n        this._notify("seeked", realCurrentTime(), trigger);\n        this._seekingTimer = -1;\n      },\n      paused() ? 100 : 0\n    );\n    this._pausedSeeking = false;\n  }\n  _onEnded(trigger) {\n    const { seeking } = this._ctx.$state;\n    if (seeking())\n      this._onSeeked(trigger);\n    this._notify("pause", void 0, trigger);\n    this._notify("end", void 0, trigger);\n  }\n  _onStateChange(state, trigger) {\n    const { started, paused, seeking } = this._ctx.$state, isPlaying = state === YouTubePlayerState._Playing, isBuffering = state === YouTubePlayerState._Buffering, isPlay = (paused() || this._playPromise) && (isBuffering || isPlaying);\n    if (isBuffering)\n      this._notify("waiting", void 0, trigger);\n    if (seeking() && isPlaying) {\n      this._onSeeked(trigger);\n    }\n    if (!started() && isPlay && this._pausedSeeking) {\n      this._playPromise?.reject("invalid internal play operation");\n      this._playPromise = null;\n      if (isPlaying) {\n        this.pause();\n        this._pausedSeeking = false;\n      }\n      return;\n    }\n    if (isPlay) {\n      this._playPromise?.resolve();\n      this._playPromise = null;\n      this._notify("play", void 0, trigger);\n    }\n    switch (state) {\n      case YouTubePlayerState._Cued:\n        this._onReady(trigger);\n        break;\n      case YouTubePlayerState._Playing:\n        this._notify("playing", void 0, trigger);\n        break;\n      case YouTubePlayerState._Paused:\n        this._onPause(trigger);\n        break;\n      case YouTubePlayerState._Ended:\n        this._onEnded(trigger);\n        break;\n    }\n    this._state = state;\n  }\n  _onMessage({ info }, event) {\n    if (!info)\n      return;\n    const { title, intrinsicDuration, playbackRate } = this._ctx.$state;\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.t)(info.videoData) && info.videoData.title !== title()) {\n      this._notify("title-change", info.videoData.title, event);\n    }\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.j)(info.duration) && info.duration !== intrinsicDuration()) {\n      if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.j)(info.videoLoadedFraction)) {\n        const buffered = info.progressState?.loaded ?? info.videoLoadedFraction * info.duration, seekable = new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(0, info.duration);\n        this._onProgress(buffered, seekable, event);\n      }\n      this._notify("duration-change", info.duration, event);\n    }\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.j)(info.playbackRate) && info.playbackRate !== playbackRate()) {\n      this._notify("rate-change", info.playbackRate, event);\n    }\n    if (info.progressState) {\n      const {\n        current,\n        seekableStart,\n        seekableEnd,\n        loaded,\n        duration: _duration\n      } = info.progressState;\n      this._onTimeUpdate(current, event);\n      this._onProgress(loaded, new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(seekableStart, seekableEnd), event);\n      if (_duration !== intrinsicDuration()) {\n        this._notify("duration-change", _duration, event);\n      }\n    }\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.j)(info.volume) && (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.b)(info.muted)) {\n      const detail = {\n        muted: info.muted,\n        volume: info.volume / 100\n      };\n      this._notify("volume-change", detail, event);\n    }\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_1__.j)(info.playerState) && info.playerState !== this._state) {\n      this._onStateChange(info.playerState, event);\n    }\n  }\n  _reset() {\n    this._state = -1;\n    this._seekingTimer = -1;\n    this._played = 0;\n    this._playedRange = new _chunks_vidstack_Bdqy3iGv_js__WEBPACK_IMPORTED_MODULE_2__.T(0, 0);\n    this._playPromise = null;\n    this._pausePromise = null;\n    this._pausedSeeking = false;\n  }\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/providers/vidstack-youtube.js?')}}]);