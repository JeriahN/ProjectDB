/*! For license information please see node_modules_vidstack_dev_providers_vidstack-video_js.main.js.LICENSE.txt */
"use strict";(self.webpackChunkProjectDB=self.webpackChunkProjectDB||[]).push([["node_modules_vidstack_dev_providers_vidstack-video_js"],{"./node_modules/vidstack/dev/providers/vidstack-video.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoProvider: () => (/* binding */ VideoProvider)\n/* harmony export */ });\n/* harmony import */ var _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunks/vidstack-mrj_B2Yo.js */ "./node_modules/vidstack/dev/chunks/vidstack-mrj_B2Yo.js");\n/* harmony import */ var _chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunks/vidstack-CFPdVubu.js */ "./node_modules/vidstack/dev/chunks/vidstack-CFPdVubu.js");\n/* harmony import */ var _vidstack_html_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-html.js */ "./node_modules/vidstack/dev/providers/vidstack-html.js");\n/* harmony import */ var _chunks_vidstack_ChQ0_aqt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunks/vidstack-ChQ0-aqt.js */ "./node_modules/vidstack/dev/chunks/vidstack-ChQ0-aqt.js");\n/* harmony import */ var _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunks/vidstack-xAXVpXZQ.js */ "./node_modules/vidstack/dev/chunks/vidstack-xAXVpXZQ.js");\n\n\n\n\n\n\n\n\n\n\nclass NativeHLSTextTracks {\n  constructor(_video, _ctx) {\n    this._video = _video;\n    this._ctx = _ctx;\n    _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.q)(this._onDispose.bind(this));\n  }\n  _onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this._video, nativeTrack))\n      return;\n    const track = new _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.T({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label ?? "",\n      language: nativeTrack.language,\n      type: "vtt"\n    });\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._native] = { track: nativeTrack };\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._readyState] = 2;\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._nativeHLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues)\n        return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this._ctx.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  _onDispose() {\n    this._video.textTracks.onaddtrack = null;\n    for (const track of this._ctx.textTracks) {\n      const nativeTrack = track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._native]?.track;\n      if (nativeTrack?.oncuechange)\n        nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nclass VideoPictureInPicture {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._onChange = (active, event) => {\n      this._media.delegate._notify("picture-in-picture-change", active, event);\n    };\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "enterpictureinpicture", this._onEnter.bind(this));\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "leavepictureinpicture", this._onExit.bind(this));\n  }\n  get active() {\n    return document.pictureInPictureElement === this._video;\n  }\n  get supported() {\n    return (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.h)(this._video);\n  }\n  async enter() {\n    return this._video.requestPictureInPicture();\n  }\n  exit() {\n    return document.exitPictureInPicture();\n  }\n  _onEnter(event) {\n    this._onChange(true, event);\n  }\n  _onExit(event) {\n    this._onChange(false, event);\n  }\n}\n\nclass VideoPresentation {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._mode = "inline";\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "webkitpresentationmodechanged", this._onModeChange.bind(this));\n  }\n  get _supported() {\n    return (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.j)(this._video);\n  }\n  async _setPresentationMode(mode) {\n    if (this._mode === mode)\n      return;\n    this._video.webkitSetPresentationMode(mode);\n  }\n  _onModeChange(event) {\n    const prevMode = this._mode;\n    this._mode = this._video.webkitPresentationMode;\n    {\n      this._media.logger?.infoGroup("presentation mode change").labelledLog("Mode", this._mode).labelledLog("Event", event).dispatch();\n    }\n    this._media.player?.dispatch(\n      new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("video-presentation-change", {\n        detail: this._mode,\n        trigger: event\n      })\n    );\n    ["fullscreen", "picture-in-picture"].forEach((type) => {\n      if (this._mode === type || prevMode === type) {\n        this._media.delegate._notify(`${type}-change`, this._mode === type, event);\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === "fullscreen";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode("fullscreen");\n  }\n  async exit() {\n    this._presentation._setPresentationMode("inline");\n  }\n}\nclass PIPPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === "picture-in-picture";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode("picture-in-picture");\n  }\n  async exit() {\n    this._presentation._setPresentationMode("inline");\n  }\n}\n\nclass VideoProvider extends _vidstack_html_js__WEBPACK_IMPORTED_MODULE_3__.HTMLMediaProvider {\n  constructor(video, ctx) {\n    super(video, ctx);\n    this.$$PROVIDER_TYPE = "VIDEO";\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.e)(() => {\n      this.airPlay = new _chunks_vidstack_ChQ0_aqt_js__WEBPACK_IMPORTED_MODULE_4__.H(video, ctx);\n      if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.j)(video)) {\n        const presentation = new VideoPresentation(video, ctx);\n        this.fullscreen = new FullscreenPresentationAdapter(presentation);\n        this.pictureInPicture = new PIPPresentationAdapter(presentation);\n      } else if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.h)(video)) {\n        this.pictureInPicture = new VideoPictureInPicture(video, ctx);\n      }\n    }, this.scope);\n  }\n  get type() {\n    return "video";\n  }\n  setup() {\n    super.setup();\n    if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.video)) {\n      new NativeHLSTextTracks(this.video, this._ctx);\n    }\n    this._ctx.textRenderers._attachVideo(this.video);\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.q)(() => {\n      this._ctx.textRenderers._attachVideo(null);\n    });\n    if (this.type === "video")\n      this._ctx.delegate._notify("provider-setup", this);\n  }\n  /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */\n  get video() {\n    return this._media;\n  }\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/providers/vidstack-video.js?')}}]);