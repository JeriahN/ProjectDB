/*! For license information please see vendors-node_modules_vidstack_dev_providers_vidstack-dash_js.main.js.LICENSE.txt */
"use strict";(self.webpackChunkProjectDB=self.webpackChunkProjectDB||[]).push([["vendors-node_modules_vidstack_dev_providers_vidstack-dash_js"],{"./node_modules/vidstack/dev/providers/vidstack-dash.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DASHProvider: () => (/* binding */ DASHProvider)\n/* harmony export */ });\n/* harmony import */ var _chunks_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../chunks/vidstack-Chu5mi6j.js */ "./node_modules/vidstack/dev/chunks/vidstack-Chu5mi6j.js");\n/* harmony import */ var _chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../chunks/vidstack-CFPdVubu.js */ "./node_modules/vidstack/dev/chunks/vidstack-CFPdVubu.js");\n/* harmony import */ var _vidstack_video_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vidstack-video.js */ "./node_modules/vidstack/dev/providers/vidstack-video.js");\n/* harmony import */ var _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunks/vidstack-mrj_B2Yo.js */ "./node_modules/vidstack/dev/chunks/vidstack-mrj_B2Yo.js");\n/* harmony import */ var _chunks_vidstack_1gmLGa6x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunks/vidstack-1gmLGa6x.js */ "./node_modules/vidstack/dev/chunks/vidstack-1gmLGa6x.js");\n/* harmony import */ var _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chunks/vidstack-xAXVpXZQ.js */ "./node_modules/vidstack/dev/chunks/vidstack-xAXVpXZQ.js");\n/* harmony import */ var _chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunks/vidstack-CnaYRoc3.js */ "./node_modules/vidstack/dev/chunks/vidstack-CnaYRoc3.js");\n/* harmony import */ var _chunks_vidstack_DJHyIwQd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunks/vidstack-DJHyIwQd.js */ "./node_modules/vidstack/dev/chunks/vidstack-DJHyIwQd.js");\n/* harmony import */ var _chunks_vidstack_DM_McBs5_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chunks/vidstack-DM_McBs5.js */ "./node_modules/vidstack/dev/chunks/vidstack-DM_McBs5.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getLangName(langCode) {\n  try {\n    const displayNames = new Intl.DisplayNames(navigator.languages, { type: "language" });\n    const languageName = displayNames.of(langCode);\n    return languageName ?? null;\n  } catch (err) {\n    return null;\n  }\n}\n\nconst toDOMEventType = (type) => `dash-${(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.S)(type)}`;\nclass DASHController {\n  constructor(_video, _ctx) {\n    this._video = _video;\n    this._ctx = _ctx;\n    this._instance = null;\n    this._stopLiveSync = null;\n    this._config = {};\n    this._callbacks = /* @__PURE__ */ new Set();\n    this._currentTrack = null;\n    this._cueTracker = {};\n    this._retryLoadingTimer = -1;\n  }\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor) {\n    this._instance = ctor().create();\n    const dispatcher = this._dispatchDASHEvent.bind(this);\n    for (const event of Object.values(ctor.events))\n      this._instance.on(event, dispatcher);\n    this._instance.on(ctor.events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks)\n      callback(this._instance);\n    this._ctx.player.dispatch("dash-instance", {\n      detail: this._instance\n    });\n    this._instance.initialize(this._video, void 0, false);\n    this._instance.updateSettings({\n      streaming: {\n        text: {\n          // Disabling text rendering by dash.\n          defaultEnabled: false,\n          dispatchForManualRendering: true\n        },\n        buffer: {\n          /// Enables buffer replacement when switching bitrates for faster switching.\n          fastSwitchEnabled: true\n        }\n      },\n      ...this._config\n    });\n    this._instance.on(ctor.events.FRAGMENT_LOADING_STARTED, this._onFragmentLoadStart.bind(this));\n    this._instance.on(\n      ctor.events.FRAGMENT_LOADING_COMPLETED,\n      this._onFragmentLoadComplete.bind(this)\n    );\n    this._instance.on(ctor.events.MANIFEST_LOADED, this._onManifestLoaded.bind(this));\n    this._instance.on(ctor.events.QUALITY_CHANGE_RENDERED, this._onQualityChange.bind(this));\n    this._instance.on(ctor.events.TEXT_TRACKS_ADDED, this._onTextTracksAdded.bind(this));\n    this._instance.on(ctor.events.TRACK_CHANGE_RENDERED, this._onTrackChange.bind(this));\n    this._ctx.qualities[_chunks_vidstack_1gmLGa6x_js__WEBPACK_IMPORTED_MODULE_1__.Q._enableAuto] = this._enableAutoQuality.bind(this);\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._ctx.qualities, "change", this._onUserQualityChange.bind(this));\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._ctx.audioTracks, "change", this._onUserAudioChange.bind(this));\n    this._stopLiveSync = (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.g)(this._liveSync.bind(this));\n  }\n  _createDOMEvent(event) {\n    return new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D(toDOMEventType(event.type), { detail: event });\n  }\n  _liveSync() {\n    if (!this._ctx.$state.live())\n      return;\n    const raf = new _chunks_vidstack_DJHyIwQd_js__WEBPACK_IMPORTED_MODULE_2__.R(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    if (!this._instance)\n      return;\n    const position = this._instance.duration() - this._instance.time();\n    this._ctx.$state.liveSyncPosition.set(!isNaN(position) ? position : Infinity);\n  }\n  _dispatchDASHEvent(event) {\n    this._ctx.player?.dispatch(this._createDOMEvent(event));\n  }\n  _onTextFragmentLoaded(event) {\n    const native = this._currentTrack?.[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__.a._native], cues = (native?.track).cues;\n    if (!native || !cues)\n      return;\n    const id = this._currentTrack.id, startIndex = this._cueTracker[id] ?? 0, trigger = this._createDOMEvent(event);\n    for (let i = startIndex; i < cues.length; i++) {\n      const cue = cues[i];\n      if (!cue.positionAlign)\n        cue.positionAlign = "auto";\n      this._currentTrack.addCue(cue, trigger);\n    }\n    this._cueTracker[id] = cues.length;\n  }\n  _onTextTracksAdded(event) {\n    if (!this._instance)\n      return;\n    const data = event.tracks, nativeTextTracks = [...this._video.textTracks].filter((track) => "manualMode" in track), trigger = this._createDOMEvent(event);\n    for (let i = 0; i < nativeTextTracks.length; i++) {\n      const textTrackInfo = data[i], nativeTextTrack = nativeTextTracks[i];\n      const id = `dash-${textTrackInfo.kind}-${i}`, track = new _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__.T({\n        id,\n        label: textTrackInfo?.label ?? textTrackInfo.labels.find((t) => t.text)?.text ?? (textTrackInfo?.lang && getLangName(textTrackInfo.lang)) ?? textTrackInfo?.lang ?? void 0,\n        language: textTrackInfo.lang ?? void 0,\n        kind: textTrackInfo.kind,\n        default: textTrackInfo.defaultTrack\n      });\n      track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__.a._native] = {\n        managed: true,\n        track: nativeTextTrack\n      };\n      track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__.a._readyState] = 2;\n      track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_3__.a._onModeChange] = () => {\n        if (!this._instance)\n          return;\n        if (track.mode === "showing") {\n          this._instance.setTextTrack(i);\n          this._currentTrack = track;\n        } else {\n          this._instance.setTextTrack(-1);\n          this._currentTrack = null;\n        }\n      };\n      this._ctx.textTracks.add(track, trigger);\n    }\n  }\n  _onTrackChange(event) {\n    const { mediaType, newMediaInfo } = event;\n    if (mediaType === "audio") {\n      const track = this._ctx.audioTracks.getById(`dash-audio-${newMediaInfo.index}`);\n      if (track) {\n        const trigger = this._createDOMEvent(event);\n        this._ctx.audioTracks[_chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__.L._select](track, true, trigger);\n      }\n    }\n  }\n  _onQualityChange(event) {\n    if (event.mediaType !== "video")\n      return;\n    const quality = this._ctx.qualities[event.newQuality];\n    if (quality) {\n      const trigger = this._createDOMEvent(event);\n      this._ctx.qualities[_chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__.L._select](quality, true, trigger);\n    }\n  }\n  _onManifestLoaded(event) {\n    if (this._ctx.$state.canPlay() || !this._instance)\n      return;\n    const { type, mediaPresentationDuration } = event.data, trigger = this._createDOMEvent(event);\n    this._ctx.delegate._notify(\n      "stream-type-change",\n      type !== "static" ? "live" : "on-demand",\n      trigger\n    );\n    this._ctx.delegate._notify("duration-change", mediaPresentationDuration, trigger);\n    this._ctx.qualities[_chunks_vidstack_1gmLGa6x_js__WEBPACK_IMPORTED_MODULE_1__.Q._setAuto](true, trigger);\n    const media = this._instance.getVideoElement();\n    const videoQualities = this._instance.getTracksForTypeFromManifest(\n      "video",\n      event.data\n    );\n    const supportedVideoMimeType = [...new Set(videoQualities.map((e) => e.mimeType))].find(\n      (type2) => type2 && (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_5__.c)(media, type2)\n    );\n    const videoQuality = videoQualities.filter(\n      (track) => supportedVideoMimeType === track.mimeType\n    )[0];\n    let audioTracks = this._instance.getTracksForTypeFromManifest(\n      "audio",\n      event.data\n    );\n    const supportedAudioMimeType = [...new Set(audioTracks.map((e) => e.mimeType))].find(\n      (type2) => type2 && (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_5__.u)(media, type2)\n    );\n    audioTracks = audioTracks.filter((track) => supportedAudioMimeType === track.mimeType);\n    videoQuality.bitrateList.forEach((bitrate, index) => {\n      const quality = {\n        id: bitrate.id?.toString() ?? `dash-bitrate-${index}`,\n        width: bitrate.width ?? 0,\n        height: bitrate.height ?? 0,\n        bitrate: bitrate.bandwidth ?? 0,\n        codec: videoQuality.codec,\n        index\n      };\n      this._ctx.qualities[_chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__.L._add](quality, trigger);\n    });\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.j)(videoQuality.index)) {\n      const quality = this._ctx.qualities[videoQuality.index];\n      if (quality)\n        this._ctx.qualities[_chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__.L._select](quality, true, trigger);\n    }\n    audioTracks.forEach((audioTrack, index) => {\n      const matchingLabel = audioTrack.labels.find((label2) => {\n        return navigator.languages.some((language) => {\n          return label2.lang && language.toLowerCase().startsWith(label2.lang.toLowerCase());\n        });\n      });\n      const label = matchingLabel || audioTrack.labels[0];\n      const localTrack = {\n        id: `dash-audio-${audioTrack?.index}`,\n        label: label?.text ?? (audioTrack.lang && getLangName(audioTrack.lang)) ?? audioTrack.lang ?? "",\n        language: audioTrack.lang ?? "",\n        kind: "main",\n        mimeType: audioTrack.mimeType,\n        codec: audioTrack.codec,\n        index\n      };\n      this._ctx.audioTracks[_chunks_vidstack_CnaYRoc3_js__WEBPACK_IMPORTED_MODULE_4__.L._add](localTrack, trigger);\n    });\n    media.dispatchEvent(new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("canplay", { trigger }));\n  }\n  _onError(event) {\n    const { type: eventType, error: data } = event;\n    {\n      this._ctx.logger?.errorGroup(`[vidstack] DASH error \\`${data.message}\\``).labelledLog("Media Element", this._video).labelledLog("DASH Instance", this._instance).labelledLog("Event Type", eventType).labelledLog("Data", data).labelledLog("Src", (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.p)(this._ctx.$state.source)).labelledLog("Media Store", { ...this._ctx.$state }).dispatch();\n    }\n    switch (data.code) {\n      case 27:\n        this._onNetworkError(data);\n        break;\n      default:\n        this._onFatalError(data);\n        break;\n    }\n  }\n  _onFragmentLoadStart() {\n    if (this._retryLoadingTimer >= 0)\n      this._clearRetryTimer();\n  }\n  _onFragmentLoadComplete(event) {\n    const mediaType = event.mediaType;\n    if (mediaType === "text") {\n      requestAnimationFrame(this._onTextFragmentLoaded.bind(this, event));\n    }\n  }\n  _onNetworkError(error) {\n    this._clearRetryTimer();\n    this._instance?.play();\n    this._retryLoadingTimer = window.setTimeout(() => {\n      this._retryLoadingTimer = -1;\n      this._onFatalError(error);\n    }, 5e3);\n  }\n  _clearRetryTimer() {\n    clearTimeout(this._retryLoadingTimer);\n    this._retryLoadingTimer = -1;\n  }\n  _onFatalError(error) {\n    this._ctx.delegate._notify("error", {\n      message: error.message ?? "",\n      code: 1,\n      error\n    });\n  }\n  _enableAutoQuality() {\n    this._switchAutoBitrate("video", true);\n    const { qualities } = this._ctx;\n    this._instance?.setQualityFor("video", qualities.selectedIndex, true);\n  }\n  _switchAutoBitrate(type, auto) {\n    this._instance?.updateSettings({\n      streaming: { abr: { autoSwitchBitrate: { [type]: auto } } }\n    });\n  }\n  _onUserQualityChange() {\n    const { qualities } = this._ctx;\n    if (!this._instance || qualities.auto || !qualities.selected)\n      return;\n    this._switchAutoBitrate("video", false);\n    this._instance.setQualityFor("video", qualities.selectedIndex, qualities.switch === "current");\n    if (_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_5__.I) {\n      this._video.currentTime = this._video.currentTime;\n    }\n  }\n  _onUserAudioChange() {\n    if (!this._instance)\n      return;\n    const { audioTracks } = this._ctx, selectedTrack = this._instance.getTracksFor("audio").find(\n      (track) => audioTracks.selected && audioTracks.selected.id === `dash-audio-${track.index}`\n    );\n    if (selectedTrack)\n      this._instance.setCurrentTrack(selectedTrack);\n  }\n  _reset() {\n    this._clearRetryTimer();\n    this._currentTrack = null;\n    this._cueTracker = {};\n  }\n  loadSource(src) {\n    this._reset();\n    if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(src.src))\n      return;\n    this._instance?.attachSource(src.src);\n  }\n  destroy() {\n    this._reset();\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._ctx?.logger?.info("\\u{1F3D7}\\uFE0F Destroyed DASH instance");\n  }\n}\n\nclass DASHLibLoader {\n  constructor(_lib, _ctx, _callback) {\n    this._lib = _lib;\n    this._ctx = _ctx;\n    this._callback = _callback;\n    this._startLoading();\n  }\n  async _startLoading() {\n    this._ctx.logger?.info("\\u{1F3D7}\\uFE0F Loading DASH Library");\n    const callbacks = {\n      onLoadStart: this._onLoadStart.bind(this),\n      onLoaded: this._onLoaded.bind(this),\n      onLoadError: this._onLoadError.bind(this)\n    };\n    let ctor = await loadDASHScript(this._lib, callbacks);\n    if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.h)(ctor) && !(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(this._lib))\n      ctor = await importDASH(this._lib, callbacks);\n    if (!ctor)\n      return null;\n    if (!window.dashjs.supportsMediaSource()) {\n      const message = "[vidstack] `dash.js` is not supported in this environment";\n      this._ctx.logger?.error(message);\n      this._ctx.player.dispatch(new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("dash-unsupported"));\n      this._ctx.delegate._notify("error", { message, code: 4 });\n      return null;\n    }\n    return ctor;\n  }\n  _onLoadStart() {\n    {\n      this._ctx.logger?.infoGroup("Starting to load `dash.js`").labelledLog("URL", this._lib).dispatch();\n    }\n    this._ctx.player.dispatch(new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("dash-lib-load-start"));\n  }\n  _onLoaded(ctor) {\n    {\n      this._ctx.logger?.infoGroup("Loaded `dash.js`").labelledLog("Library", this._lib).labelledLog("Constructor", ctor).dispatch();\n    }\n    this._ctx.player.dispatch(\n      new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("dash-lib-loaded", {\n        detail: ctor\n      })\n    );\n    this._callback(ctor);\n  }\n  _onLoadError(e) {\n    const error = (0,_chunks_vidstack_DM_McBs5_js__WEBPACK_IMPORTED_MODULE_6__.c)(e);\n    {\n      this._ctx.logger?.errorGroup("[vidstack] Failed to load `dash.js`").labelledLog("Library", this._lib).labelledLog("Error", e).dispatch();\n    }\n    this._ctx.player.dispatch(\n      new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("dash-lib-load-error", {\n        detail: error\n      })\n    );\n    this._ctx.delegate._notify("error", {\n      message: error.message,\n      code: 4,\n      error\n    });\n  }\n}\nasync function importDASH(loader, callbacks = {}) {\n  if ((0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.h)(loader))\n    return void 0;\n  callbacks.onLoadStart?.();\n  if (loader.prototype && loader.prototype !== Function) {\n    callbacks.onLoaded?.(loader);\n    return loader;\n  }\n  try {\n    const ctor = (await loader())?.default;\n    if (ctor) {\n      callbacks.onLoaded?.(ctor);\n    } else {\n      throw Error(\n         true ? "[vidstack] failed importing `dash.js`. Dynamic import returned invalid constructor." : 0\n      );\n    }\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\nasync function loadDASHScript(src, callbacks = {}) {\n  if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(src))\n    return void 0;\n  callbacks.onLoadStart?.();\n  try {\n    await (0,_chunks_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_7__.l)(src);\n    if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.x)(window.dashjs.MediaPlayer)) {\n      throw Error(\n         true ? "[vidstack] failed loading `dash.js`. Could not find a valid `Dash` constructor on window" : 0\n      );\n    }\n    const ctor = window.dashjs.MediaPlayer;\n    callbacks.onLoaded?.(ctor);\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\n\nconst JS_DELIVR_CDN = "https://cdn.jsdelivr.net";\nclass DASHProvider extends _vidstack_video_js__WEBPACK_IMPORTED_MODULE_8__.VideoProvider {\n  constructor() {\n    super(...arguments);\n    this.$$PROVIDER_TYPE = "DASH";\n    this._ctor = null;\n    this._controller = new DASHController(this.video, this._ctx);\n    this._library = `${JS_DELIVR_CDN}/npm/dashjs@4.7.4/dist/dash${".all.debug.js" }`;\n  }\n  /**\n   * The `dash.js` constructor.\n   */\n  get ctor() {\n    return this._ctor;\n  }\n  /**\n   * The current `dash.js` instance.\n   */\n  get instance() {\n    return this._controller.instance;\n  }\n  static {\n    /**\n     * Whether `dash.js` is supported in this environment.\n     */\n    this.supported = (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_5__.v)();\n  }\n  get type() {\n    return "dash";\n  }\n  get canLiveSync() {\n    return true;\n  }\n  /**\n   * The `dash.js` configuration object.\n   *\n   * @see {@link https://cdn.dashjs.org/latest/jsdoc/module-Settings.html}\n   */\n  get config() {\n    return this._controller._config;\n  }\n  set config(config) {\n    this._controller._config = config;\n  }\n  /**\n   * The `dash.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/dashjs@4.7.4/dist/dash.all.min.js`\n   */\n  get library() {\n    return this._library;\n  }\n  set library(library) {\n    this._library = library;\n  }\n  preconnect() {\n    if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(this._library))\n      return;\n    (0,_chunks_vidstack_Chu5mi6j_js__WEBPACK_IMPORTED_MODULE_7__.p)(this._library);\n  }\n  setup() {\n    super.setup();\n    new DASHLibLoader(this._library, this._ctx, (ctor) => {\n      this._ctor = ctor;\n      this._controller.setup(ctor);\n      this._ctx.delegate._notify("provider-setup", this);\n      const src = (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.p)(this._ctx.$state.source);\n      if (src)\n        this.loadSource(src);\n    });\n  }\n  async loadSource(src, preload) {\n    if (!(0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.i)(src.src)) {\n      this._removeSource();\n      return;\n    }\n    this._media.preload = preload || "";\n    this._appendSource(src, "application/x-mpegurl");\n    this._controller.loadSource(src);\n    this._currentSrc = src;\n  }\n  /**\n   * The given callback is invoked when a new `dash.js` instance is created and right before it\'s\n   * attached to media.\n   */\n  onInstance(callback) {\n    const instance = this._controller.instance;\n    if (instance)\n      callback(instance);\n    this._controller._callbacks.add(callback);\n    return () => this._controller._callbacks.delete(callback);\n  }\n  destroy() {\n    this._controller.destroy();\n  }\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/providers/vidstack-dash.js?')},"./node_modules/vidstack/dev/providers/vidstack-video.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoProvider: () => (/* binding */ VideoProvider)\n/* harmony export */ });\n/* harmony import */ var _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunks/vidstack-mrj_B2Yo.js */ "./node_modules/vidstack/dev/chunks/vidstack-mrj_B2Yo.js");\n/* harmony import */ var _chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunks/vidstack-CFPdVubu.js */ "./node_modules/vidstack/dev/chunks/vidstack-CFPdVubu.js");\n/* harmony import */ var _vidstack_html_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vidstack-html.js */ "./node_modules/vidstack/dev/providers/vidstack-html.js");\n/* harmony import */ var _chunks_vidstack_ChQ0_aqt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunks/vidstack-ChQ0-aqt.js */ "./node_modules/vidstack/dev/chunks/vidstack-ChQ0-aqt.js");\n/* harmony import */ var _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunks/vidstack-xAXVpXZQ.js */ "./node_modules/vidstack/dev/chunks/vidstack-xAXVpXZQ.js");\n\n\n\n\n\n\n\n\n\n\nclass NativeHLSTextTracks {\n  constructor(_video, _ctx) {\n    this._video = _video;\n    this._ctx = _ctx;\n    _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.q)(this._onDispose.bind(this));\n  }\n  _onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this._video, nativeTrack))\n      return;\n    const track = new _chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.T({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label ?? "",\n      language: nativeTrack.language,\n      type: "vtt"\n    });\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._native] = { track: nativeTrack };\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._readyState] = 2;\n    track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._nativeHLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues)\n        return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this._ctx.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  _onDispose() {\n    this._video.textTracks.onaddtrack = null;\n    for (const track of this._ctx.textTracks) {\n      const nativeTrack = track[_chunks_vidstack_xAXVpXZQ_js__WEBPACK_IMPORTED_MODULE_1__.a._native]?.track;\n      if (nativeTrack?.oncuechange)\n        nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nclass VideoPictureInPicture {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._onChange = (active, event) => {\n      this._media.delegate._notify("picture-in-picture-change", active, event);\n    };\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "enterpictureinpicture", this._onEnter.bind(this));\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "leavepictureinpicture", this._onExit.bind(this));\n  }\n  get active() {\n    return document.pictureInPictureElement === this._video;\n  }\n  get supported() {\n    return (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.h)(this._video);\n  }\n  async enter() {\n    return this._video.requestPictureInPicture();\n  }\n  exit() {\n    return document.exitPictureInPicture();\n  }\n  _onEnter(event) {\n    this._onChange(true, event);\n  }\n  _onExit(event) {\n    this._onChange(false, event);\n  }\n}\n\nclass VideoPresentation {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._mode = "inline";\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.l)(this._video, "webkitpresentationmodechanged", this._onModeChange.bind(this));\n  }\n  get _supported() {\n    return (0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.j)(this._video);\n  }\n  async _setPresentationMode(mode) {\n    if (this._mode === mode)\n      return;\n    this._video.webkitSetPresentationMode(mode);\n  }\n  _onModeChange(event) {\n    const prevMode = this._mode;\n    this._mode = this._video.webkitPresentationMode;\n    {\n      this._media.logger?.infoGroup("presentation mode change").labelledLog("Mode", this._mode).labelledLog("Event", event).dispatch();\n    }\n    this._media.player?.dispatch(\n      new _chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.D("video-presentation-change", {\n        detail: this._mode,\n        trigger: event\n      })\n    );\n    ["fullscreen", "picture-in-picture"].forEach((type) => {\n      if (this._mode === type || prevMode === type) {\n        this._media.delegate._notify(`${type}-change`, this._mode === type, event);\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === "fullscreen";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode("fullscreen");\n  }\n  async exit() {\n    this._presentation._setPresentationMode("inline");\n  }\n}\nclass PIPPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === "picture-in-picture";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode("picture-in-picture");\n  }\n  async exit() {\n    this._presentation._setPresentationMode("inline");\n  }\n}\n\nclass VideoProvider extends _vidstack_html_js__WEBPACK_IMPORTED_MODULE_3__.HTMLMediaProvider {\n  constructor(video, ctx) {\n    super(video, ctx);\n    this.$$PROVIDER_TYPE = "VIDEO";\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.e)(() => {\n      this.airPlay = new _chunks_vidstack_ChQ0_aqt_js__WEBPACK_IMPORTED_MODULE_4__.H(video, ctx);\n      if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.j)(video)) {\n        const presentation = new VideoPresentation(video, ctx);\n        this.fullscreen = new FullscreenPresentationAdapter(presentation);\n        this.pictureInPicture = new PIPPresentationAdapter(presentation);\n      } else if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.h)(video)) {\n        this.pictureInPicture = new VideoPictureInPicture(video, ctx);\n      }\n    }, this.scope);\n  }\n  get type() {\n    return "video";\n  }\n  setup() {\n    super.setup();\n    if ((0,_chunks_vidstack_CFPdVubu_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.video)) {\n      new NativeHLSTextTracks(this.video, this._ctx);\n    }\n    this._ctx.textRenderers._attachVideo(this.video);\n    (0,_chunks_vidstack_mrj_B2Yo_js__WEBPACK_IMPORTED_MODULE_0__.q)(() => {\n      this._ctx.textRenderers._attachVideo(null);\n    });\n    if (this.type === "video")\n      this._ctx.delegate._notify("provider-setup", this);\n  }\n  /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */\n  get video() {\n    return this._media;\n  }\n}\n\n\n\n\n//# sourceURL=webpack://ProjectDB/./node_modules/vidstack/dev/providers/vidstack-video.js?')}}]);